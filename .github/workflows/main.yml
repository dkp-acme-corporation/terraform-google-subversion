#
#
# BOF
---

name: Standard workflow 
run-name: Standard workflow run by ${{ github.actor }}
on: [ push ]

# Relative paths will be under the $GITHUB_WORKSPACE directory
env:
  TERRAFORM_CODE_PATH: ./terraform
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_CLOUD_TOKEN }}
  TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

defaults:
  run: 
    shell: bash

jobs:
  preparation:
    runs-on: ubuntu-latest
    environment: prd
    env: 
      TERRAFORM_VERSION: 1.3.3
    # 
    steps:
      - name: Initialization
        run: |
          echo "TF_WORKSPACE=$(basename ${{ github.repository }})" >> $GITHUB_ENV
      - name: Checkout source code
        uses: actions/checkout@v3
      ## ---------------------------------------------------
      - name: Cache setup
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/bin/terraform
            ${{ env.TERRAFORM_CODE_PATH }}/.terraform
          key: ${{ runner.os }}-terraform-${{ github.ref_name }}
      ## ---------------------------------------------------
      - name: Terraform installation
        id: terraform-install
        #
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt install terraform=${{ env.TERRAFORM_VERSION }}
      ## ---------------------------------------------------
      - name: Terraform install validataion
        id: terraform-install-validate
        run: |
          pwd
          find .
          set
          terraform version
      ## ---------------------------------------------------
      - name: Terraform initialization
        id: terraform-init
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          terraform init
  validation:
   runs-on: ubuntu-latest
   environment: prd
   needs: [ preparation ]
   #
   steps:
    ## ---------------------------------------------------
    - name: Checkout source code
      uses: actions/checkout@v3
    ## ---------------------------------------------------
    - name: Cache setup
      id: cache
      uses: actions/cache@v3
      with:
        path: |
            /usr/local/bin/terraform
            ${{ env.TERRAFORM_CODE_PATH }}/.terraform
        key: ${{ runner.os }}-terraform-${{ github.ref_name }}
    ## ---------------------------------------------------
    - name: Terraform Validate
      run: |
        cd ${{ env.TERRAFORM_DIR }}
        terraform validate
    ## ---------------------------------------------------
    - name: Terraform Format
      run: |
        terraform fmt -recursive -diff
        #
        git config user.email github-actions@github.com
        git config user.name github-actions
        #
        TMP=$(git add --update **/*.tf **/*.tfvars)
        git status
        #
        if [ -n "$(git status | grep 'no changes added to commit')" ]; then
          echo "No updates required to code format" 
        else
          # commit the needed changes
          #git commit --message "CI ${{ github.repository }} code format changed" 
          #
          #git status --short
          #
          # push the updated code back into the repo
          #git push --push-option=ci.skip origin HEAD:${{ github.ref_name }}
          #git push
          #
          git --no-pager log --pretty=oneline -n2
          #
          echo "Updates to the repository completed successfully" 
        fi



...
# EOF